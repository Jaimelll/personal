wb = xlsx_package.workbook

wb.styles do |style|

titu = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                                 alignment: { horizontal: :center,vertical: :center, wrap_text: :true },
                                b: true, sz: 8, bg_color: "C1C1C1")

titu1 = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                                 alignment: { horizontal: :center,vertical: :center, wrap_text: :true },
                                b: true, sz: 10,:bg_color => "585858", :fg_color=>"FFFFFF")                                

soles = style.add_style(border: Axlsx::STYLE_THIN_BORDER,
                           alignment: { horizontal: :center ,vertical: :center},num_fmt: 3)

soles1 = style.add_style(border: Axlsx::STYLE_THIN_BORDER,:bg_color => "BDBDBD",
                           alignment: { horizontal: :center ,vertical: :center},num_fmt: 3)


fechas = style.add_style(format_code: "mm-yyyy", border: Axlsx::STYLE_THIN_BORDER,
                        alignment: { horizontal: :center })

centra = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                               alignment: { horizontal: :center })

centra1 = style.add_style( border: Axlsx::STYLE_THIN_BORDER,sz: 10,:bg_color => "BDBDBD",
                               alignment: { horizontal: :center })                               

izq = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                                alignment: { horizontal: :left })

izq1 = style.add_style( border: Axlsx::STYLE_THIN_BORDER,sz: 10,:bg_color => "BDBDBD",
                                alignment: { horizontal: :left })                                

desc = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                              alignment: { horizontal: :left ,vertical: :center, wrap_text: :true},sz: 7)

desca = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                              alignment: { horizontal: :left ,vertical: :center, wrap_text: :true},sz: 8)

descb = style.add_style( border: Axlsx::STYLE_THIN_BORDER,
                              alignment: { horizontal: :center ,vertical: :center, wrap_text: :true},sz: 8)




@nopci
case @nopci
    when "1"
##################

              wb.add_worksheet(name: "NIVELES") do |sheet|

            sheet.add_row []


                sheet.add_row %w(N NIVEL MAXIMO MINIMO CANTIDAD),
                                        style: [titu, titu, titu, titu, titu], height: 40

              Formula.where(product_id:10000).order('cantidad').each do |proce|

             ncant=Employee.where(sele:proce.orden).count
            sheet.add_row [proce.orden, proce.nombre,proce.numero,proce.acti,ncant ],
                               style: [centra, izq, soles, soles,centra]


              end
              sheet.column_widths *[5, 30, 14, 14, 10]

           end
###############


wb.add_worksheet(name: "CAS") do |sheet|

  sheet.add_row []

  sheet.add_row %w(N NOMBRE AREA NIVEL REMUNERACIÓN CALCULO OBSERVACIÓN DIFERENCIA),
  style: [titu, titu, titu, titu, titu, titu, titu, titu]

 @conta=0


 Employee.where(estado:1,tip_tra:1).order('ape_nom').each do |emple|
 @conta=@conta+1

  @varea=Formula.where(product_id:26,orden:emple.area).select('nombre as dd').first.dd

  if emple.sele and emple.sele>0 then
     @vtipo=Formula.where(product_id:10000,orden:emple.sele).select('nombre as dd').first.dd
     min=Formula.where(product_id:10000,orden:emple.sele).select('numero as dd').first.dd
     max=Formula.where(product_id:10000,orden:emple.sele).select('acti as dd').first.dd
  else
     @vtipo=""
     min=0
     max=0
  end
  if min>0 then
    if emple.remuneracion>=min and emple.remuneracion<=max then
       nuevo=emple.remuneracion
       obb="mantiene"
    end
   if emple.remuneracion<min then
     nuevo=min
        obb="sube"
   end

   if emple.remuneracion>max then
     nuevo=max
        obb="baja"
   end
  dif=nuevo-emple.remuneracion

else
nuevo=0
dif=0
  obb=""
end


   sheet.add_row [ @conta, emple.ape_nom,   @varea, @vtipo, emple.remuneracion,nuevo,obb,dif ],
   style: [centra, izq, centra, centra, soles, soles, centra, soles]





end
vvccon= @conta+2
tot="TOTAL"
sheet.add_row [nil,tot,nil,nil,"=SUM(E3:E#{ vvccon})","=SUM(F4:F#{vvccon})",nil,"=SUM(H4:H#{vvccon})" ],
    style: [soles, centra, soles, soles, soles, soles, soles, soles]


sheet.column_widths *[5, 45, 10, 12, 15,12,15,12]
end

######################
  when "2"
  ###############

Formula.where(product_id:23).order('orden').where('orden=1 or orden=3').each do |tipotrab|
  wb.add_worksheet(name: tipotrab.nombre) do |sheet|

    sheet.add_row []

    sheet.add_row %w(N APE_PATERNO APE_MATERNO NOMBRES DNI ESTADO_CIVIL AFP INGRESO PROFESION 
    DIRECION DISTRITO TELEFONO EMAIL AREA CARGO REMUNERACIÒN NIVEL NACIMIENTO TERMINO_CONTRATO),
    style: [titu, titu, titu, titu, titu, titu, titu, titu, titu, titu, titu, 
            titu, titu, titu, titu, titu, titu, titu, titu, titu, titu, titu, titu]

   @conta=0


   Employee.where(estado:1,tip_tra:tipotrab.orden).order('ape_nom').each do |emple|
   @conta=@conta+1

    varea1=Formula.where(product_id:26,orden:emple.area)
    if varea1.count>0 then
        varea=varea1.select('descripcion as dd').first.dd
    else
        varea="s/d"
    end

    vecivil1=Formula.where(product_id:24,orden:emple.esta_civil)
    if vecivil1.count>0 then
        vecivil=vecivil1.select('nombre as dd').first.dd
    else
        vecivil="s/d"
    end

    vafp1=Formula.where(product_id:30,orden:emple.afp)
    if vafp1.count>0 then
        vafp=vafp1.select('nombre as dd').first.dd
    else
        vafp="s/d"
    end
    if emple.fec_inicon then
       vfing=emple.fec_inicon.strftime("%d-%m-%Y")
    else
       vfing="s/d"
    end

    if emple.fec_nacimiento then
       vfnac=emple.fec_nacimiento.strftime("%d-%m-%Y")
    else
       vfnac="s/d"
    end

    if emple.fec_tercon then
       vfter=emple.fec_tercon.strftime("%d-%m-%Y")
    else
       vfter="s/d"
    end
      vniv=Formula.where(product_id:10000,orden:emple.sele)
    if vniv.count>0 then
        vniv1=vniv.select('nombre as dd').first.dd
    else
        vniv1="s/d"
    end



     sheet.add_row [ @conta, emple.ape_pat, emple.ape_mat, emple.nombres,
     " "+emple.dni,vecivil,vafp,vfing,emple.grado,emple.direccion,emple.distrito,
     emple.telefono,emple.correo,varea,emple.cargo, emple.remuneracion,vniv1,
     vfnac,vfter],
     style: [centra, izq,izq, izq,centra,centra,centra,centra,izq,izq,izq,centra,
     izq,izq,  izq,soles,izq,centra,centra]





  end


  sheet.column_widths *[5,20,20,30,10,15,15,15,50,50,30,20,40,40,
                   45,15,20,15,20]
  end
 end
  ######################
  when "3"
  ###############


 

Formula.where(product_id:26).order('orden').each do |warea|

 wb.add_worksheet(name: warea.nombre) do |sheet|


    sheet.add_row []

 vem=Employee.where(estado:1,area:warea.orden)
 vet=Employee.where(estado:1)
 
 cvem=vem.count
 cvet=vet.count

 svem=vem.sum('remuneracion')
 svet=vet.sum('remuneracion')

if svet>0 then
  vpor1=svem*100/svet
  vpor2=cvem*100/cvet
 else
   vpor1=0
   vpor2=0
 end

 sheet.add_row [warea.descripcion.upcase]
 sheet.add_row []
 sheet.add_row [nil,nil,warea.nombre,"TOTAL","%"],
                 style: [nil,nil,titu1,titu1,titu1 ]
 sheet.add_row [nil,"CANTIDAD DE PERSONAL=",cvem,cvet,vpor2.to_i],
    style: [nil,centra,soles ,soles,centra ]
 sheet.add_row [nil,"TOTAL REMUNERACIONES=",svem,svet,vpor1.to_i],
     style: [nil,centra,soles,soles,centra  ]
 sheet.add_row []
    sheet.add_row %w(N NOMBRE VINCULO REMUNERACIÒN),
    style: [titu1, titu1, titu1, titu1  ]

   @conta=0


   vem.order('ape_nom').each do |emple|
   @conta=@conta+1

    varea=Formula.where(product_id:26,orden:emple.area).select('nombre as dd').first.dd
    vinc=Formula.where(product_id:23,orden:emple.tip_tra).select('nombre as dd').first.dd



     sheet.add_row [ @conta, emple.ape_nom, vinc,emple.remuneracion ],
     style: [centra1, izq1, centra1, soles1]

      vfunc=Function.where(employee_id:emple.id).order('activo,id DESC')
      if vfunc.count>0 then
#      sheet.add_row [ nil, nil,nil,"ORDEN","TIPO","DESCRIPCION"],
#                    style: [nil,nil,nil,titu,titu,titu]
       vfunc.each do |vfuncion|

        vtipo= Formula.where(product_id:10020, orden:vfuncion.sele2)
         if vtipo.count>0 then
             vtipo1= vtipo.select('nombre as dd').first.dd
         else
              vtipo1=''
         end

         sheet.add_row [ vtipo1,vfuncion.descripcion],
           style: [descb,desca], :height => 36

       end #each
     end

  end
  sheet.column_widths *[5, 60, 13,14,7]
  end

  
  end

  ######################


  end #de case
end
